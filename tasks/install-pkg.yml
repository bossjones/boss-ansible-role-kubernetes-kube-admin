---
- name: Disable pinned Docker version
  file:
    dest: "/etc/apt/preferences.d/docker-ce.pref"
    state: "absent"
  when: boss__kubernetes__kubeadm__remove_package or boss__kubernetes__kubeadm__version == "" or boss__kubernetes__kubeadm__version == "latest"

- name: Pin Docker version
  template:
    src: "etc/apt/preferences.d/docker-ce.pref.j2"
    dest: "/etc/apt/preferences.d/docker-ce.pref"
    owner: "root"
    group: "root"
    mode: "0644"
  when: not boss__kubernetes__kubeadm__remove_package and (boss__kubernetes__kubeadm__version and boss__kubernetes__kubeadm__version != "latest")

- name: Install Docker's dependencies
  apt:
    name: "{{ item }}"
    update_cache: True
    cache_valid_time: "{{ boss__kubernetes__kubeadm__apt_cache_time }}"
  with_items: "{{ boss__kubernetes__kubeadm__package_dependencies }}"

- name: Add Docker's GPG key
  apt_key:
    id: "{{ boss__kubernetes__kubeadm__apt_key_id }}"
    url: "{{ boss__kubernetes__kubeadm__apt_key_server }}"

- name: Configure upstream APT repository
  apt_repository:
    repo: "{{ boss__kubernetes__kubeadm__apt_repository }}"

- name: Remove Docker
  apt:
    name: "docker-{{ boss__kubernetes__kubeadm__edition }}"
    state: "absent"
  when: boss__kubernetes__kubeadm__remove_package

- name: Install Docker
  apt:
    name: "docker-{{ boss__kubernetes__kubeadm__edition }}"
    update_cache: True
    cache_valid_time: "{{ boss__kubernetes__kubeadm__apt_cache_time }}"
    state: "{{ boss__kubernetes__kubeadm__package_state }}"
  when: not boss__kubernetes__kubeadm__remove_package
  notify: restart docker

# - name: Install Docker.
#   package:
#     name: "{{ boss__kubernetes__kubeadm__package }}"
#     state: "{{ boss__kubernetes__kubeadm__package_state }}"
#   notify: restart docker
