####################################################
# - include_tasks: init.yml
####################################################

# FIXME: we need to switch out all of the hardcoded values! ( 11/28/2018 )

# ORIG: 12/1/2018
# - name: initialize kube
#   shell: >
#        kubeadm reset --force &&
#        sysctl -p &&
#        kubeadm init --apiserver-advertise-address=10.0.0.10 --pod-network-cidr=10.244.0.0/16
#   args:
#     creates: /etc/kubeadm-join.sh
#   register: kubeadm_out

- name: initialize kube
  shell: >
       kubeadm reset --force &&
       sysctl -p &&
       {{boss__kubernetes__kubeadm__kubeadm_init_cmd}}
  args:
    creates: /etc/kubeadm-join.sh
  register: kubeadm_out


- name: write kubeadm_out to /var/log/kubeadm_init.log
  copy:
    content: |
      {{kubeadm_out.stdout}}
    dest: /var/log/kubeadm_init.log
  when: ansible_os_family == "Debian"

- name: get join string from stdout in kubeadm init command
  lineinfile:
    path: /etc/kubeadm-join.sh
    line: "{{kubeadm_out.stdout_lines[-1]}}"
    create: yes
  when: kubeadm_out.stdout.find("kubeadm join") != -1

- name: start up kubelet
  service: name=kubelet state=started enabled=yes

- name: create folder /etc/kubectl
  file: name=/etc/kubectl state=directory

# FIXME: Figure out if we need this damn cluster cidr !!!!!!!!!! 12/1/2018
# - name: fix configmap for proxy
#   shell: >
#     export KUBECONFIG=/etc/kubernetes/admin.conf ;
#     kubectl -n kube-system get cm/kube-proxy -o yaml
#     | sed -e 's!clusterCIDR: ""!clusterCIDR: "10.0.0.0/24"!' >/etc/kubectl/kube-proxy.map ;
#     kubectl -n kube-system replace cm/kube-proxy -f /etc/kubectl/kube-proxy.map ;
#     kubectl -n kube-system delete pods -l k8s-app=kube-proxy
#   args:
#     creates: /etc/kubectl/kube-proxy.map


####################################################
# - include_tasks: kubectl.yml
####################################################

- name: Add export KUBECONFIG=/etc/kubernetes/admin.conf to root/ssh user bashrc
  lineinfile:
    # path: /root/.bash_profile
    path: '$HOME/.bashrc'
    line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'
    create: yes
  become: '{{ item }}'
  with_items:
    - true  # Run as root
    - false # Run as SSH user

# - name: Add export KUBECONFIG=/etc/kubernetes/admin.conf to root/ssh user bash_profile
#   lineinfile:
#     path: '$HOME/.bash_profile'
#     line: 'export KUBECONFIG=/etc/kubernetes/admin.conf'
#     create: yes
#   become: '{{ item }}'
#   with_items:
#     - true  # Run as root
#     - false # Run as SSH user


- name: create directory ~/.kube for root/ssh user
  # file: path='$HOME/.kube' state=directory owner=vagrant
  file: path='$HOME/.kube' state=directory mode=0755 recurse=True
  become: '{{ item }}'
  with_items:
    - true  # Run as root
    - false # Run as SSH user

# - name: create file ~/.kube/config for root/ssh user
#   # file: path='$HOME/.kube' state=directory owner=vagrant
#   file: path='$HOME/.kube/config' state=touch
#   become: '{{ item }}'
#   with_items:
#     - true  # Run as root
#     - false # Run as SSH user

# TODO: remove this
# - file: path=/home/ubuntu/.kube state=directory owner=ubuntu

# TODO: remove this
# - command: cp /etc/kubernetes/admin.conf /home/vagrant/.kube/config

# TODO: remove this
# - command: cp /etc/kubernetes/admin.conf /home/ubuntu/.kube/config

# TODO: remove this
# - file: name=/home/vagrant/.kube/config state=file owner=vagrant

# TODO: remove this
# - file: name=/home/ubuntu/.kube/config state=file owner=ubuntu

# - name: 'add source <(kubectl completion bash) to bash_profile'
#   blockinfile:
#     dest: '$HOME/.bash_profile'
#     block: |
#       source <(kubectl completion bash)
#     state: present
#     create: yes
#     mode: 0644
#   become: '{{ item }}'
#   with_items:
#     - true  # Run as root
#     - false # Run as SSH user

# - name: 'add source <(kubectl completion bash) to bashrc'
#   blockinfile:
#     dest: '$HOME/.bashrc'
#     block: |
#       source <(kubectl completion bash)
#     state: present
#     create: yes
#     mode: 0644
#   become: '{{ item }}'
#   with_items:
#     - true  # Run as root
#     - false # Run as SSH user


- name: Add source <(kubectl completion bash) to root/ssh user bashrc
  lineinfile:
    path: '$HOME/.bashrc'
    line: 'source <(kubectl completion bash)'
    create: yes
  become: '{{ item }}'
  with_items:
    - true  # Run as root
    - false # Run as SSH user


- name: Add source <(kubeadm completion bash) to root/ssh user bashrc
  lineinfile:
    path: '$HOME/.bashrc'
    line: 'source <(kubeadm completion bash)'
    create: yes
  become: '{{ item }}'
  with_items:
    - true  # Run as root
    - false # Run as SSH user

# - name: 'add source <(kubeadm completion bash) to bash_profile'
#   blockinfile:
#     dest: '$HOME/.bash_profile'
#     block: |
#       source <(kubeadm completion bash)
#     state: present
#     create: yes
#     mode: 0644
#   become: '{{ item }}'
#   with_items:
#     - true  # Run as root
#     - false # Run as SSH user

# - name: 'add source <(kubeadm completion bash) to bashrc'
#   blockinfile:
#     dest: '$HOME/.bashrc'
#     block: |
#       source <(kubeadm completion bash)
#     state: present
#     create: yes
#     mode: 0644
#   become: '{{ item }}'
#   with_items:
#     - true  # Run as root
#     - false # Run as SSH user

# - lineinfile:
#     path: /root/.bash_profile
#     line: 'source <(kubectl completion bash)'
#     create: yes

# - lineinfile:
#     path: /home/vagrant/.bash_profile
#     line: 'source <(kubectl completion bash)'
#     create: yes

# - lineinfile:
#     path: /home/ubuntu/.bash_profile
#     line: 'source <(kubectl completion bash)'
#     create: yes

####################################################
# - include_tasks: weave.yml
####################################################

# FIXME: We need to nuke this 12/1/2018

# NOTE: We moved this over to post_deploy.yml

# - sysctl: name=net.bridge.bridge-nf-call-ip6tables value=1 state=present reload=yes sysctl_set=yes

# - sysctl: name=net.bridge.bridge-nf-call-iptables value=1 state=present reload=yes sysctl_set=yes

# - name: install weave net
#   shell: >
#     export KUBECONFIG=/etc/kubernetes/admin.conf ;
#     export kubever=$(sudo kubectl version | base64 | tr -d '\n') ;
#     curl --location "https://cloud.weave.works/k8s/net?k8s-version=$kubever" >/etc/kubectl/weave.yml ;
#     kubectl apply -f /etc/kubectl/weave.yml

# - name: Verify that weave-net is running correctly
#   shell: >
#     export KUBECONFIG=/etc/kubernetes/admin.conf ;
#     kubectl get pods -n kube-system -l name=weave-net
#   register: result
#   until: result.stdout.find("Running") != -1
#   retries: 100
#   delay: 10

# - name: 'setup $HOME/.kube/config for root'
#   shell: >
#      cp -fv /etc/kubernetes/admin.conf $HOME/.kube/config ;
#      chown $(id -u):$(id -g) $HOME/.kube/config ;
#   args:
#     creates: /tmp/root-kube-config-created
#   become: '{{ item }}'
#   with_items:
#     - true  # Run as root

# - name: 'setup $HOME/.kube/config for default user'
#   shell: >
#      sudo cp -fv /etc/kubernetes/admin.conf $HOME/.kube/config ;
#      sudo chown $(id -u):$(id -g) $HOME/.kube/config ;
#   args:
#     creates: /tmp/root-kube-config-created
#   become: '{{ item }}'
#   with_items:
#     - false # Run as SSH user

- name: setup $HOME/.kube/config for default user
  copy: 
    src: /etc/kubernetes/admin.conf 
    dest: ~/.kube/config
    remote_src: True
  become: '{{ item }}'
  with_items:
    - true  # Run as root
  tags:
  - kubeadm
  - kubelet

- name: Get /etc/kubernetes/admin.conf and write it locally to ansible controller
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: ./admin.conf
    flat: true