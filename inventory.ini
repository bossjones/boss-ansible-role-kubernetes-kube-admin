
master ansible_ssh_host=master ansible_ssh_private_key_file=~/.ssh/vagrant_id_rsa ip=192.168.50.101 ansible_ssh_port=22 ansible_ssh_user='vagrant' ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o PasswordAuthentication=no -o ControlMaster=auto -o ControlPersist=60s -o ControlPath=~/.ansible/cp/ansible-ssh-%h-%p-%r'

worker1 ansible_ssh_host=worker1 ansible_ssh_private_key_file=~/.ssh/vagrant_id_rsa ip=192.168.50.102 ansible_ssh_port=22 ansible_ssh_user='vagrant' ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o PasswordAuthentication=no -o ControlMaster=auto -o ControlPersist=60s -o ControlPath=~/.ansible/cp/ansible-ssh-%h-%p-%r'

worker2 ansible_ssh_host=worker2 ansible_ssh_private_key_file=~/.ssh/vagrant_id_rsa ip=192.168.50.103 ansible_ssh_port=22 ansible_ssh_user='vagrant' ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o PasswordAuthentication=no -o ControlMaster=auto -o ControlPersist=60s -o ControlPath=~/.ansible/cp/ansible-ssh-%h-%p-%r'
# worker3 ansible_ssh_host=worker3 ansible_ssh_private_key_file=~/.ssh/vagrant_id_rsa ip=192.168.50.104 ansible_ssh_port=22 ansible_ssh_user='vagrant' ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o PasswordAuthentication=no -o ControlMaster=auto -o ControlPersist=60s -o ControlPath=~/.ansible/cp/ansible-ssh-%h-%p-%r'

[local]
localhost ansible_connection=local

# [docker1]
# docker1 ansible_connection=ssh ansible_host=192.168.13.100 ip=192.168.13.100 ansible_ssh_port=22 ansible_ssh_private_key_file=~/.ssh/vagrant_id_rsa ansible_user=vagrant ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o PasswordAuthentication=no -o ControlMaster=auto -o ControlPersist=60s -o ControlPath=~/.ansible/cp/ansible-ssh-%h-%p-%r'

# [docker2]
# docker2 ansible_connection=ssh ansible_host=192.168.13.101 ip=192.168.13.101 ansible_ssh_port=22 ansible_ssh_private_key_file=~/.ssh/vagrant_id_rsa ansible_user=vagrant ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o PasswordAuthentication=no -o ControlMaster=auto -o ControlPersist=60s -o ControlPath=~/.ansible/cp/ansible-ssh-%h-%p-%r'

# [docker_servers:children]
# docker1
# docker2

# [dns_servers:children]
# docker1
# docker2

# [servers:children]
# docker1
# docker2

# [raspbian:vars]
# ansible_user=vagrant
# ansible_python_interpreter=/usr/bin/python2.7

# [vagrant]
# # vagrant ansible_host=127.0.0.1

# [vagrant:vars]
# ansible_port=2222
# ansible_connection=ssh
# ansible_ssh_user=vagrant
# ansible_ssh_pass=vagrant


[kubernetes-master]
master

[kubernetes-master:vars]
boss__kubernetes__kubeadm__server_type=master

[kubernetes-nodes]
worker1
worker2
# worker3

[kubernetes-nodes:vars]
boss__kubernetes__kubeadm__server_type=node

[kubernetes:children]
kubernetes-master
kubernetes-nodes

[all:children]
kubernetes

[servers:children]
kubernetes-master
kubernetes-nodes




# Use FullyQualifiedDomainNames (FQDN) (e.g. machine1.corp.example.com)
[primary-master]
master

# [secondary-masters]
# # If there is only one master, make this section empty
# master[2:3].corp.example.com

[masters:children]
primary-master
# secondary-masters

[primary-etcd:children]
primary-master

# [secondary-etcds:children]
# secondary-masters

# [etcd:children]
# primary-etcd
# secondary-etcds

[nodes]
# If there is only one machine both master and node, make this section empty
worker[1:2]

[node:children]
nodes
